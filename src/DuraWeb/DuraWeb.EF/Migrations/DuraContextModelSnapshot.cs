// <auto-generated />
using DuraWeb.EF;
using DuraWeb.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DuraWeb.EF.Migrations
{
    [DbContext(typeof(DuraContext))]
    partial class DuraContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DuraWeb.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bus");

                    b.Property<string>("City");

                    b.Property<int>("CustomerId");

                    b.Property<string>("Number");

                    b.Property<string>("PostalCode");

                    b.Property<string>("Street");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("DuraWeb.Model.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressId");

                    b.Property<int?>("AddressId1");

                    b.Property<string>("Firstname");

                    b.Property<string>("Lastname");

                    b.Property<string>("Telephone");

                    b.Property<int>("Title");

                    b.Property<string>("VatNumber");

                    b.HasKey("Id");

                    b.HasIndex("AddressId1");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DuraWeb.Model.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("ExpiryDate");

                    b.Property<byte[]>("File");

                    b.Property<int>("InvoiceNumber");

                    b.Property<bool>("Paid");

                    b.Property<string>("Remarks");

                    b.Property<int>("VatRegime");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("DuraWeb.Model.InvoiceItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<string>("Description");

                    b.Property<int>("InvoiceId");

                    b.Property<decimal>("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceItem");
                });

            modelBuilder.Entity("DuraWeb.Model.Customer", b =>
                {
                    b.HasOne("DuraWeb.Model.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId1");
                });

            modelBuilder.Entity("DuraWeb.Model.Invoice", b =>
                {
                    b.HasOne("DuraWeb.Model.Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DuraWeb.Model.InvoiceItem", b =>
                {
                    b.HasOne("DuraWeb.Model.Invoice")
                        .WithMany("Items")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
